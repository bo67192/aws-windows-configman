AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Account:
    Type: String
    Default: sandbox
    AllowedValues:
      - sandbox
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
Mappings:
  Accounts:
    sandbox:
      AmiId: ami-2d18313b
  sandbox:
    prod:
      SsmParameterArnPrefix: arn:aws:ssm:us-east-1:748540586735:parameter
Resources:
  CodeDeployRole: 
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      RoleName: CodeDeployRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "codedeploy.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  CodeDeployApplicationCtxMgmt:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: !Sub "hc-cmt-man-utilities-${Account}-${Environment}"
  CodeDeployGroupCtx:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: !Sub "hc-cmt-man-utilities-${Account}-${Environment}"
      DeploymentGroupName: !Sub "hs-cmt-${Environment}-deploy"
      DeploymentConfigName: CodeDeployDefault.HalfAtATime
      Ec2TagFilters:
        -
          Key: SSM_Modules
          Value: !Sub PHI-ALL-${Environment}
          Type: "KEY_AND_VALUE"
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
    DependsOn: CodeDeployApplicationCtxMgmt
  SsmAssociationUpdateAmazonInspectorManageAWSAgent:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HS-ADM-BASE-UpdateAWS-Inspector-${Environment}
      Name: AmazonInspector-ManageAWSAgent
      Parameters:
        Operation: 
          - Install
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
  SsmAssociationUpdateEc2Config:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HS-ADM-BASE-UpdateEc2Config-${Environment}
      Name: AWS-UpdateEC2Config
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
  SsmAssociationInstallCodeDeploy:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HC-ADM-CMT-InstallCodeDeploy-${Environment}
      Name: AWS-InstallApplication
      Parameters:
        action: 
          - Install
        source: 
          - https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/codedeploy-agent.msi
        parameters: 
          - "/quiet /l c:\\codedeploy-install-log.txt"
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Key: tag:SSM_Modules
          Values: 
            - !Sub "PHI-ALL-${Environment}"
  SsmAssociationQueryUpdateSsmAgent:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HC-ADM-CMT-UpdateSsmAgent-${Environment}
      Name: AWS-UpdateSSMAgent
      ScheduleExpression: "rate(1 day)"
      Parameters:
        allowDowngrade: 
          - "true"
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
  SsmAssociationQueryScanPatches:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HC-ADM-CMT-ScanPatches-${Environment}
      Name: AWS-RunPatchBaseline
      ScheduleExpression: "rate(1 day)"
      Parameters:
        Operation: 
          - Scan
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
  SsmAssociationGatherInventory:
    Type: "AWS::SSM::Association"
    Properties: 
      AssociationName: !Sub HC-ADM-CMT-GatherInventory-${Environment}
      Name: AWS-GatherSoftwareInventory
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
  SsmAssociationConfigureCloudwatch:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: !Sub HC-ADM-CMT-ConfigureCloudwatch-${Environment}
      Name: AWS-ConfigureCloudWatch
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Key: tag:SSM_Association
          Values: Windows-${Environment}
      Parameters:
        properties: 
          - !Sub |+
              {
                  "IsEnabled": true,
                  "EngineConfiguration": {
                      "PollInterval": "00:00:15",
                      "Components": [
                          {
                              "Id": "SSMConfigLogs",
                              "FullName": "AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch",
                              "Parameters": {
                                  "LogDirectoryPath": "C:\\Docutap\\SSMLogs\\",
                                  "TimestampFormat": "yyyy-MM-dd HH:mm:ss",
                                  "Encoding": "UTF-8",
                                  "Filter": "",
                                  "CultureName": "en-US",
                                  "TimeZoneKind": "UTC",
                                  "LineCount": "1"
                              }
                          },
                          {
                              "Id": "MemoryPerformanceCounter",
                              "FullName": "AWS.EC2.Windows.CloudWatch.PerformanceCounterComponent.PerformanceCounterInputComponent,AWS.EC2.Windows.CloudWatch",
                              "Parameters": {
                                  "CategoryName": "Memory",
                                  "CounterName": "Available MBytes",
                                  "InstanceName": "",
                                  "MetricName": "Memory",
                                  "Unit": "Megabytes",
                                  "DimensionName": "instance_id",
                                  "DimensionValue": "{instance_id}"
                              }
                          },
                          {
                              "Id": "DiskPerformanceCounter",
                              "FullName": "AWS.EC2.Windows.CloudWatch.PerformanceCounterComponent.PerformanceCounterInputComponent,AWS.EC2.Windows.CloudWatch",
                              "Parameters": {
                                  "CategoryName": "LogicalDisk",
                                  "CounterName": "% Free Space",
                                  "InstanceName": "C:",
                                  "MetricName": "C_Drive_Free_Percent",
                                  "Unit": "Percent",
                                  "DimensionName": "instance_id",
                                  "DimensionValue": "{instance_id}"
                              }
                          },
                          {
                              "Id": "CloudWatchLogs",
                              "FullName": "AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch",
                              "Parameters": {
                                  "AccessKey": "",
                                  "SecretKey": "",
                                  "Region": "us-east-1",
                                  "LogGroup": "ssm/config/${Environment}",
                                  "LogStream": "{instance_id}"
                              }
                          },
                          {
                            "Id": "CloudWatch",
                            "FullName": "AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch",
                            "Parameters": {
                                "AccessKey": "",
                                "SecretKey": "",
                                "Region": "us-east-1",
                                "NameSpace": "Windows/Default"
                            }
                          }
                      ],
                      "Flows": {
                          "Flows": 
                          [
                              "SSMConfigLogs,CloudWatchLogs",
                              "(DiskPerformanceCounter,MemoryPerformanceCounter),CloudWatch"
                          ]
                      }
                  }
              }
  SsmCloudwatchEventMonitor:
    Type: "AWS::Events::Rule"
    Properties: 
      Description: !Sub HC-ADM-CMT-Alerter-${Environment}
      EventPattern: 
        source: 
          - "aws.ssm"
        detail-type: 
          - "EC2 State Manager Instance Association State Change"
        detail:
          association-name:
            - !Sub HC-ADM-CMT-ConfigureCloudwatch-${Environment}
            - !Sub HC-ADM-CMT-GatherInventory-${Environment}
            - !Sub HC-ADM-CMT-Manager-${Environment}
            - !Sub HC-ADM-CMT-ScanPatches-${Environment}
            - !Sub HC-ADM-CMT-UpdateSsmAgent-${Environment}
          status: 
            - "Failed"
      State: "ENABLED"
      Targets: 
        - 
          Arn: !FindInMap [!Ref Account, !Ref Environment, SnsTopicItEngAlert]
          Id: ItEngSnsTopic
          InputTransformer:
            InputPathsMap: {
             "instance-id" : "$.detail.instance-id",
              "last-successful-execution-date" : "$.detail.last-successful-execution-date",
              "association" : "$.detail.association-name",
              "last-execution-date" : "$.detail.last-execution-date"
            }
            InputTemplate: '"SSM Association <association> has failed on instance <instance-id>. Last successful run: <last-successful-execution-date>. Last execution date: <last-execution-date>"'

